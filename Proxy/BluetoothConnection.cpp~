#include "BluetoothConnection.h"

struct sockaddr_rc addr = { 0 };
//int s, status;
char dest[18] = "20:14:05:05:14:66";
//string address;

BluetoothConnection::BluetoothConnection() 
{
}

BluetoothConnection::BluetoothConnection(string addr)
{
  init(addr);
}
int BluetoothConnection::getStatus() 
{
  return 0;
}

int BluetoothConnection::init(string addr) 
{
  cout << "Initializing btc object: " << addr << endl;
  //strcpy(address, addr);
  address = addr;
  //strcpy(address, addr);
  //  BluetoothConnection::establishConnection();
  //if( status < 0 ) perror("uh oh");

  //close(s);
  return 0;
}

string BluetoothConnection::getAddress()
{
  return address;
}
int BluetoothConnection::establishConnection() 
{
    // allocate a socket
    s = socket(AF_BLUETOOTH, SOCK_STREAM, BTPROTO_RFCOMM);

    // set the connection parameters (who to connect to)
    addr.rc_family = AF_BLUETOOTH;
    addr.rc_channel = (uint8_t) 1;
    str2ba( dest, &addr.rc_bdaddr );

    // connect to server
    status = connect(s, (struct sockaddr *)&addr, sizeof(addr));
    return status;
}

int BluetoothConnection::sendMessage(char* msg) 
{
    // send a message
    if( status == 0 ) {
	for(int i = 0; i < 5; i++) {
	  status = write(s, msg, strlen(msg));
	  std::cout << i << std::endl;
	  sleep(1);
	}
    }
    return status;
}

char* BluetoothConnection::readMessage() 
{
    char buf[1024] = {0};
    int bytes_read = read(s, buf, sizeof(buf));
    if(bytes_read > 0) printf("received [%s]\n", buf);

}
